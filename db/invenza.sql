
USE Invenza;

-- ✅ MODULE: USERS & ROLES
CREATE TABLE U01_ROLE
(
    ROLE_ID INT PRIMARY KEY IDENTITY,
    ROLE_NAME NVARCHAR(50) UNIQUE NOT NULL,
    DESCRIPTION NVARCHAR(255),
    CREATED_AT DATETIME DEFAULT GETDATE()
);

CREATE TABLE U01_USER
(
    USER_ID INT PRIMARY KEY IDENTITY,
    USERNAME NVARCHAR(50) UNIQUE NOT NULL,
    PASSWORD_HASH NVARCHAR(255) NOT NULL,
    ROLE_ID INT FOREIGN KEY REFERENCES U01_ROLE(ROLE_ID),
    EMAIL NVARCHAR(100),
    PHONE NVARCHAR(20),
    IS_ACTIVE BIT DEFAULT 1,
    CREATED_AT DATETIME DEFAULT GETDATE()
);

CREATE TABLE U01_USER_SESSION
(
    SESSION_ID INT PRIMARY KEY IDENTITY,
    USER_ID INT FOREIGN KEY REFERENCES U01_USER(USER_ID),
    LOGIN_TIME DATETIME,
    LOGOUT_TIME DATETIME,
    IP_ADDRESS NVARCHAR(50)
);

CREATE TABLE U01_USER_ACTIVITY
(
    ACTIVITY_ID INT PRIMARY KEY IDENTITY,
    USER_ID INT FOREIGN KEY REFERENCES U01_USER(USER_ID),
    ACTION NVARCHAR(255),
    MODULE NVARCHAR(100),
    ACTION_TIME DATETIME DEFAULT GETDATE()
);

-- ✅ MODULE: PRODUCT MANAGEMENT
CREATE TABLE P01_CATEGORY
(
    CATEGORY_ID INT PRIMARY KEY IDENTITY,
    CATEGORY_NAME NVARCHAR(100),
    DESCRIPTION NVARCHAR(255),
    CREATED_AT DATETIME DEFAULT GETDATE()
);

CREATE TABLE P01_PRODUCT
(
    PRODUCT_ID INT PRIMARY KEY IDENTITY,
    SKU NVARCHAR(50) UNIQUE NOT NULL,
    NAME NVARCHAR(100),
    CATEGORY_ID INT FOREIGN KEY REFERENCES P01_CATEGORY(CATEGORY_ID),
    BRAND NVARCHAR(100),
    UNIT NVARCHAR(20),
    PRICE DECIMAL(18,2),
    TAX_PERCENT DECIMAL(5,2),
    IS_ACTIVE BIT DEFAULT 1,
    CREATED_AT DATETIME DEFAULT GETDATE()
);

CREATE TABLE P01_PRODUCT_DESCRIPTION
(
    DESCRIPTION_ID INT PRIMARY KEY IDENTITY,
    PRODUCT_ID INT FOREIGN KEY REFERENCES P01_PRODUCT(PRODUCT_ID),
    SHORT_DESCRIPTION NVARCHAR(500),
    LONG_DESCRIPTION NVARCHAR(MAX),
    SPECIFICATIONS NVARCHAR(MAX),
    CREATED_AT DATETIME DEFAULT GETDATE()
);

CREATE TABLE P01_PRODUCT_IMAGE
(
    IMAGE_ID INT PRIMARY KEY IDENTITY,
    PRODUCT_ID INT FOREIGN KEY REFERENCES P01_PRODUCT(PRODUCT_ID),
    IMAGE_URL NVARCHAR(255),
    UPLOADED_AT DATETIME DEFAULT GETDATE()
);

CREATE TABLE P01_PRODUCT_ATTRIBUTE
(
    ATTRIBUTE_ID INT PRIMARY KEY IDENTITY,
    PRODUCT_ID INT FOREIGN KEY REFERENCES P01_PRODUCT(PRODUCT_ID),
    ATTRIBUTE_NAME NVARCHAR(100),
    ATTRIBUTE_VALUE NVARCHAR(255)
);

CREATE TABLE P01_PRODUCT_REVIEW
(
    REVIEW_ID INT PRIMARY KEY IDENTITY,
    PRODUCT_ID INT FOREIGN KEY REFERENCES P01_PRODUCT(PRODUCT_ID),
    USER_ID INT FOREIGN KEY REFERENCES U01_USER(USER_ID),
    RATING INT CHECK (RATING BETWEEN 1 AND 5),
    COMMENT NVARCHAR(500),
    REVIEW_DATE DATETIME DEFAULT GETDATE(),
    IS_APPROVED BIT DEFAULT 0
);


-- ✅ MODULE: SUPPLIER MANAGEMENT
CREATE TABLE S01_SUPPLIER
(
    SUPPLIER_ID INT PRIMARY KEY IDENTITY,
    NAME NVARCHAR(100),
    CONTACT_NAME NVARCHAR(100),
    EMAIL NVARCHAR(100),
    PHONE NVARCHAR(20),
    ADDRESS NVARCHAR(255),
    GST_NO NVARCHAR(50),
    CREATED_AT DATETIME DEFAULT GETDATE()
);

CREATE TABLE S01_SUPPLIER_PRODUCT
(
    ID INT PRIMARY KEY IDENTITY,
    SUPPLIER_ID INT FOREIGN KEY REFERENCES S01_SUPPLIER(SUPPLIER_ID),
    PRODUCT_ID INT FOREIGN KEY REFERENCES P01_PRODUCT(PRODUCT_ID),
    SUPPLY_PRICE DECIMAL(18,2)
);


-- ✅ MODULE: WAREHOUSE & INVENTORY
CREATE TABLE W01_WAREHOUSE
(
    WAREHOUSE_ID INT PRIMARY KEY IDENTITY,
    NAME NVARCHAR(100),
    LOCATION NVARCHAR(200),
    IS_ACTIVE BIT DEFAULT 1,
    CREATED_AT DATETIME DEFAULT GETDATE()
);

CREATE TABLE I01_INVENTORY
(
    INVENTORY_ID INT PRIMARY KEY IDENTITY,
    PRODUCT_ID INT FOREIGN KEY REFERENCES P01_PRODUCT(PRODUCT_ID),
    WAREHOUSE_ID INT FOREIGN KEY REFERENCES W01_WAREHOUSE(WAREHOUSE_ID),
    QUANTITY INT NOT NULL,
    LAST_UPDATED DATETIME DEFAULT GETDATE()
);

CREATE TABLE I01_STOCK_MOVEMENT
(
    MOVEMENT_ID INT PRIMARY KEY IDENTITY,
    PRODUCT_ID INT FOREIGN KEY REFERENCES P01_PRODUCT(PRODUCT_ID),
    WAREHOUSE_ID INT FOREIGN KEY REFERENCES W01_WAREHOUSE(WAREHOUSE_ID),
    MOVEMENT_TYPE NVARCHAR(20),
    -- IN, OUT, ADJUST
    QUANTITY INT,
    REASON NVARCHAR(255),
    MOVED_BY INT FOREIGN KEY REFERENCES U01_USER(USER_ID),
    MOVED_AT DATETIME DEFAULT GETDATE()
);

CREATE TABLE I01_REORDER_LEVEL
(
    ID INT PRIMARY KEY IDENTITY,
    PRODUCT_ID INT FOREIGN KEY REFERENCES P01_PRODUCT(PRODUCT_ID),
    MIN_QUANTITY INT,
    MAX_QUANTITY INT
);

-- ✅ MODULE: BILLING & INVOICING
CREATE TABLE B01_CUSTOMER
(
    CUSTOMER_ID INT PRIMARY KEY IDENTITY,
    NAME NVARCHAR(100),
    EMAIL NVARCHAR(100),
    PHONE NVARCHAR(20),
    ADDRESS NVARCHAR(255),
    CREATED_AT DATETIME DEFAULT GETDATE()
);

CREATE TABLE B01_SALES_INVOICE
(
    INVOICE_ID INT PRIMARY KEY IDENTITY,
    CUSTOMER_ID INT FOREIGN KEY REFERENCES B01_CUSTOMER(CUSTOMER_ID),
    USER_ID INT FOREIGN KEY REFERENCES U01_USER(USER_ID),
    TOTAL_AMOUNT DECIMAL(18,2),
    TAX_AMOUNT DECIMAL(18,2),
    DISCOUNT DECIMAL(18,2),
    NET_AMOUNT DECIMAL(18,2),
    PAYMENT_MODE NVARCHAR(50),
    -- Cash, Card, UPI, etc.
    STATUS NVARCHAR(50),
    -- Paid, Pending, Cancelled
    INVOICE_DATE DATETIME DEFAULT GETDATE()
);

CREATE TABLE B01_SALES_ITEM
(
    ITEM_ID INT PRIMARY KEY IDENTITY,
    INVOICE_ID INT FOREIGN KEY REFERENCES B01_SALES_INVOICE(INVOICE_ID),
    PRODUCT_ID INT FOREIGN KEY REFERENCES P01_PRODUCT(PRODUCT_ID),
    QUANTITY INT,
    UNIT_PRICE DECIMAL(18,2),
    TAX_AMOUNT DECIMAL(18,2),
    TOTAL_AMOUNT DECIMAL(18,2)
);

CREATE TABLE B01_PAYMENT
(
    PAYMENT_ID INT PRIMARY KEY IDENTITY,
    INVOICE_ID INT FOREIGN KEY REFERENCES B01_SALES_INVOICE(INVOICE_ID),
    AMOUNT_PAID DECIMAL(18,2),
    PAYMENT_MODE NVARCHAR(50),
    PAID_AT DATETIME DEFAULT GETDATE()
);

-- ✅ MODULE: PURCHASE MANAGEMENT
CREATE TABLE P02_VENDOR
(
    VENDOR_ID INT PRIMARY KEY IDENTITY,
    NAME NVARCHAR(100),
    CONTACT_NAME NVARCHAR(100),
    EMAIL NVARCHAR(100),
    PHONE NVARCHAR(20),
    ADDRESS NVARCHAR(255),
    GST_NO NVARCHAR(50),
    CREATED_AT DATETIME DEFAULT GETDATE()
);


CREATE TABLE P02_VENDOR_PRODUCT
(
    ID INT PRIMARY KEY IDENTITY,
    VENDOR_ID INT FOREIGN KEY REFERENCES P02_VENDOR(VENDOR_ID),
    PRODUCT_ID INT FOREIGN KEY REFERENCES P01_PRODUCT(PRODUCT_ID),
    SUPPLY_PRICE DECIMAL(18,2),
    MIN_ORDER_QUANTITY INT,
    MAX_ORDER_QUANTITY INT,
    LEAD_TIME INT,
    -- in days
    IS_ACTIVE BIT DEFAULT 1
);


CREATE TABLE B01_PURCHASE_INVOICE
(
    PURCHASE_ID INT PRIMARY KEY IDENTITY,
    SUPPLIER_ID INT FOREIGN KEY REFERENCES S01_SUPPLIER(SUPPLIER_ID),
    TOTAL_AMOUNT DECIMAL(18,2),
    TAX_AMOUNT DECIMAL(18,2),
    NET_AMOUNT DECIMAL(18,2),
    PURCHASE_DATE DATETIME DEFAULT GETDATE(),
    STATUS NVARCHAR(50)
    -- Received, Pending
);

CREATE TABLE B01_PURCHASE_ITEM
(
    ITEM_ID INT PRIMARY KEY IDENTITY,
    PURCHASE_ID INT FOREIGN KEY REFERENCES B01_PURCHASE_INVOICE(PURCHASE_ID),
    PRODUCT_ID INT FOREIGN KEY REFERENCES P01_PRODUCT(PRODUCT_ID),
    QUANTITY INT,
    UNIT_PRICE DECIMAL(18,2),
    TAX_AMOUNT DECIMAL(18,2),
    TOTAL_AMOUNT DECIMAL(18,2)
);


-- More modules (eCommerce, reports, audit logs) coming next...

-- ✅ MODULE: ECOMMERCE INTEGRATION
CREATE TABLE E01_ECOM_PLATFORM
(
    PLATFORM_ID INT PRIMARY KEY IDENTITY,
    NAME NVARCHAR(100),
    API_BASE_URL NVARCHAR(255),
    API_KEY NVARCHAR(255),
    STATUS BIT DEFAULT 1,
    CREATED_AT DATETIME DEFAULT GETDATE()
);

CREATE TABLE E01_PRODUCT_SYNC
(
    SYNC_ID INT PRIMARY KEY IDENTITY,
    PRODUCT_ID INT FOREIGN KEY REFERENCES P01_PRODUCT(PRODUCT_ID),
    PLATFORM_ID INT FOREIGN KEY REFERENCES E01_ECOM_PLATFORM(PLATFORM_ID),
    SYNC_DATE DATETIME DEFAULT GETDATE(),
    STATUS NVARCHAR(50)
);

CREATE TABLE E01_ORDER
(
    ORDER_ID INT PRIMARY KEY IDENTITY,
    PLATFORM_ID INT FOREIGN KEY REFERENCES E01_ECOM_PLATFORM(PLATFORM_ID),
    CUSTOMER_NAME NVARCHAR(100),
    ORDER_TOTAL DECIMAL(18,2),
    ORDER_DATE DATETIME,
    STATUS NVARCHAR(50)
);

CREATE TABLE E01_ORDER_ITEM
(
    ITEM_ID INT PRIMARY KEY IDENTITY,
    ORDER_ID INT FOREIGN KEY REFERENCES E01_ORDER(ORDER_ID),
    PRODUCT_ID INT FOREIGN KEY REFERENCES P01_PRODUCT(PRODUCT_ID),
    QUANTITY INT,
    PRICE DECIMAL(18,2)
);



-- ✅ MODULE: AUDIT LOGS
CREATE TABLE A01_AUDIT_LOG
(
    LOG_ID INT PRIMARY KEY IDENTITY,
    USER_ID INT FOREIGN KEY REFERENCES U01_USER(USER_ID),
    ACTION NVARCHAR(255),
    DETAILS NVARCHAR(1000),
    LOG_TIME DATETIME DEFAULT GETDATE()
);

-- ✅ MODULE: NOTIFICATIONS
CREATE TABLE N01_NOTIFICATION
(
    NOTIFICATION_ID INT PRIMARY KEY IDENTITY,
    USER_ID INT FOREIGN KEY REFERENCES U01_USER(USER_ID),
    MESSAGE NVARCHAR(500),
    IS_READ BIT DEFAULT 0,
    SENT_AT DATETIME DEFAULT GETDATE()
);

-- ✅ MODULE: SYSTEM SETTINGS
CREATE TABLE S01_SETTING
(
    SETTING_KEY NVARCHAR(100) PRIMARY KEY,
    SETTING_VALUE NVARCHAR(500),
    UPDATED_AT DATETIME DEFAULT GETDATE()
);
-- Insert default roles
INSERT INTO U01_ROLE
    (ROLE_NAME, DESCRIPTION)
VALUES
    ('Admin', 'Administrator with full access'),
    ('Manager', 'Manager with limited access'),
    ('User', 'Regular user with basic access');
-- Insert default settings
INSERT INTO S01_SETTING
    (SETTING_KEY, SETTING_VALUE)
VALUES
    ('SystemName', 'Invenza'),
    ('SystemVersion', '1.0.0'),
    ('SupportEmail', 'akdwivedi7355@gmail.com'),
    ('SupportPhone', '+91-1234567890'),
    ('DefaultCurrency', 'INR'),
    ('TaxRate', '18.00');
-- Insert default categories
INSERT INTO P01_CATEGORY
    (CATEGORY_NAME, DESCRIPTION)
VALUES
    ('Electronics', 'Electronic items like mobiles, laptops, etc.'),
    ('Furniture', 'Furniture items like tables, chairs, etc.'),
    ('Clothing', 'Apparel and clothing items'),
    ('Groceries', 'Daily grocery items');
-- Insert default suppliers
